---
- name: Install packages
  shell: rpm-ostree install kubernetes-client
  register: command_result
  ignore_errors: true

- name: restart hosts
  shell: sleep 3 && shutdown -r now
  async: 1
  poll: 0
  when: "'systemctl reboot' in command_result.stdout"

- name: wait for hosts to come back up
  local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=15 timeout=120
  sudo: false

#- name: install flannel
#  shell: atomic install --system --set FLANNELD_ETCD_ENDPOINTS={% for node in groups['etcd'] %}http://{{ node }}:2379{% if not loop.last %},{% endif %}{% endfor %} --set FLANNELD_ETCD_PREFIX=/{{ cluster_name }}/network --name flanneld jasonbrooks/flannel:f25
#  ignore_errors: true

#- name: install etcd
#  shell: atomic install --system --set ETCD_LISTEN_CLIENT_URLS={{ etcd_listen_client_urls }} --name etcd jasonbrooks/etcd:f25
#  when: inventory_hostname in groups['masters']
#  ignore_errors: true

- name: Place node component service files
  template: src={{ item }} dest=/etc/systemd/system/
  with_items:
    - kubelet.service
    - kube-proxy.service
  when: inventory_hostname in groups['nodes']  

- name: Place master component service files
  template: src={{ item }} dest=/etc/systemd/system/
  with_items:
    - kube-apiserver.service
    - kube-scheduler.service
    - kube-controller-manager.service
  when: inventory_hostname in groups['masters']

- name: daemon-reload
  raw: systemctl daemon-reload
  when: inventory_hostname in groups['masters']
